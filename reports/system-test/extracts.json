[
  {
    "Index": 1,
    "Title": "Example Domain",
    "URL": "https://example.com",
    "Excerpt": "\nExample Domain\n\nThis domain is for use in illustrative examples in documents. You may use this\ndomain in literature without prior coordination or asking for permission.\n\nMore information..."
  },
  {
    "Index": 2,
    "Title": "The Go Programming Language",
    "URL": "https://go.dev",
    "Excerpt": "\nBuild simple, secure, scalable systems with Go\n\nAn open-source programming language supported by Google\n\nEasy to learn and great for teams\n\nBuilt-in concurrency and a robust standard library\n\nLarge ecosystem of partners, communities, and tools\n\nGet Started\nDownload\n\nOpens a new window with the Get Started guide.\n\nOpens a new window to download Go.\n\nDownload packages for\nWindows 64-bit,\nmacOS,\nLinux, and\nmore\n\nThe go\ncommand by default downloads and authenticates\nmodules using the Go module mirror and Go checksum database run by\nGoogle. Learn more.\n\nOpens in new window.\n\nCompanies using Go\n\nOrganizations in every industry use Go to power their software and services\n\nView all stories\n\nView case study\n\n\n\n\n“At the time, no single team member knew Go, but\nwithin a month, everyone was writing in Go and we were\nbuilding out the endpoints. It was the flexibility, how easy it was to use,\nand the really cool concept behind Go (how Go handles native concurrency,\ngarbage collection, and of course safety+speed.) that helped engage us\nduring the build. Also, who can beat that cute mascot!”\n\n— Jaime Enrique Garcia Lopez,\nSenior Software Development Manager\nat Capital One\n\n\"A small language that compiles fast makes for a happy developer.\nThe Go language is small, compiles really fast, and as a result it lets your\nmind focus on the actual problem and less on the tool you are using to solve\nit. Code, test, debug cycles are so quick that you forget you are not\nworking with an interpreted language. Looking at our code, you see\nless boilerplate and more business logic.\"\n\n— Clayton Coleman,\nLead Engineer, Open Shift\nat RedHat\n\n“Go has excellent characteristics for scalability and services\nwritten using it typically have very small memory footprints.\nBecause code is compiled into a single static binary, services can also be\ncontainerised with ease, making it much simpler to build and deploy. These\nattributes make Go an ideal choice for companies building\nmicroservices, as you can easily deploy into a highly available and\nscalable environment such as Kubernetes.”\n\n— Matt Boyle,\nLead Software Engineer\nat Curve\n\n\"In our tightly managed environments where we run Go code,\nwe have seen a CPU reduction of approximately 10%\nwith cleaner and maintainable code.\"\n\n— Bala Natarajan,\nSr. Director of Engineering, Developer Experience\nat PayPal\n\n\"Tooling has always been a problem with our legacy code base... but we have\nfound that Go has excellent tooling, plus built-in testing, benchmarking,\nand profiling frameworks. It is easy to write efficient and resilient\napplications. After working on Go, most of our developers don't want\nto go back to other languages.\"\n\n— Benjamin Cane,\nVice President and Principal Engineer\nat American Express\n\n\"...when a programming language is designed for exactly the environment most\nof us use right now—scalable, cloud-based servers that are optimized for\nperformance—a lot can go right.\"\n\n— John Biggs and Ben Popper,\n\nat Stack Overflow\n\nnavigate_before\n\nnavigate_next\n\nTry Go\n\nPress Esc to move out of the editor.\n\n// You can edit this code!\n// Click here and start typing.\npackage main\nimport \"fmt\"\nfunc main() {\nfmt.Println(\"Hello, 世界\")\n}\n\n\nHello, World!\nConway's Game of Life\nFibonacci Closure\nPeano Integers\nConcurrent pi\nConcurrent Prime Sieve\nPeg Solitaire Solver\nTree Comparison\n\nRun\n\nShare\nTour\n\nWhat’s possible with Go\n\nUse Go for a variety of software development purposes\n\nCloud \u0026 Network Services\n\nWith a strong ecosystem of tools and APIs on major cloud providers, it is easier than ever to build services with Go.\n\nPopular Packages:\n\ncloud.google.com/go\n\naws/client\n\nAzure/azure-sdk-for-go\n\nLearn More\narrow_forward\n\nCommand-line Interfaces\n\nWith popular open source packages and a robust standard library, use Go to create fast and elegant CLIs.\n\n\nspf13/cobra\n\nspf13/viper\n\nurfave/cli\n\ndelve\n\nchzyer/readline\n\n\nWeb Development\n\nWith enhanced memory performance and support for several IDEs, Go powers fast and scalable web applications.\n\n\nnet/http\n\nhtml/template\n\nflosch/pongo2\n\ndatabase/sql\n\nelastic/go-elasticsearch\n\n\nDevOps \u0026 Site Reliability\n\nWith fast build times, lean syntax, an automatic formatter and doc generator, Go is built to support both DevOps and SRE.\n\n\nopen-telemetry/opentelemetry-go\n\nistio/istio\n\n\n\nMore use cases\n\nGet started with Go\n\nExplore a wealth of learning resources, including guided journeys, courses, books, and more.\n\nDownload Go\n\nResources to start on your own\n\nGuided learning journeys\n\nStep-by-step tutorials to get your feet wet\n\nOnline learning\n\nBrowse resources and learn at your own pace\n\nFeatured books\n\nRead through structured chapters and theories\n\nCloud Self-paced labs\n\nJump in to deploying Go apps on GCP\n\nIn-Person Trainings\n\nArdan Labs\n\nOffering customized on-site live training classes.\n\nGopher Guides\n\nCustomized In-person, remote, and online training classes. Training for Developers by Developers.\n\nBoss Sauce Creative\n\nPersonalized or track-based Go training for teams.\n\nShiju Varghese\n\nOn-site classroom training on Go and consulting on distributed systems architectures, in India."
  }
]